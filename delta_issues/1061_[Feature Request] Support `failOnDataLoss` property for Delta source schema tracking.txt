## Feature request

#### Which Delta project/connector is this regarding?
<!--
Please add the component selected below to the beginning of the issue title
For example: [Feature Request][Spark] Title of my issue
-->

- [x] Spark
- [ ] Standalone
- [ ] Flink
- [ ] Kernel
- [ ] Other (fill in here)

### Overview
We currently support schemaTrackingLocation ([doc](https://docs.delta.io/latest/delta-streaming.html#tracking-non-additive-schema-changes)) that allows Delta streaming source to track additive and non-additive schema changes during streaming from a Delta table.

However, if `failOnDataLoss` reader option is used and there's a gap in the data log (e.g. due to log out of retention period), `schemaTrackingLocation` usage will be blocked. 

There maybe better mechanisms to tackle this scenario, such as introducing an option to reinitialize the schema tracking log with the next available schema at that time.

### Motivation

This allows the `schemaTrackingLocation` option be used with `failOnDataLoss`.

### Further details

<!--
Use this section to include any additional information about the feature. If you have a proposal for how to implement this feature, please include it here. For implementation guidelines, please read our contributor guidelines: https://github.com/delta-io/delta/blob/master/CONTRIBUTING.md
If there are any specific requirements for this feature that are not immediately obvious please outline them here.
-->

### Willingness to contribute

The Delta Lake Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature?

- [ ] Yes. I can contribute this feature independently.
- [ ] Yes. I would be willing to contribute this feature with guidance from the Delta Lake community.
- [ ] No. I cannot contribute this feature at this time.