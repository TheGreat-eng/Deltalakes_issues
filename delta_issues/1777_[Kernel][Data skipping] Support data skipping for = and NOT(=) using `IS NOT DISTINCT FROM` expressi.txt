## Feature request

#### Which Delta project/connector is this regarding?
<!--
Please add the component selected below to the beginning of the issue title
For example: [Feature Request][Spark] Title of my issue
-->

- [ ] Spark
- [ ] Standalone
- [ ] Flink
- [X] Kernel
- [ ] Other (fill in here)

### Overview

Use file statistics to prune files based on the `IS NOT DISTINCT FROM` expression..

### Motivation

Better file pruning.

### Further details

This means we should
1) add NullSafeEquals to the Kernel [Predicate](https://github.com/delta-io/delta/blob/master/kernel/kernel-api/src/main/java/io/delta/kernel/expressions/Predicate.java) and support it in the kernel-defaults project
2) Generate a data skipping filter according to the [same rules](https://github.com/delta-io/delta/blob/master/spark/src/main/scala/org/apache/spark/sql/delta/stats/DataSkippingReader.scala#L496) we use in delta-spark

Note:
In Spark, the `NullPropogation` rule transforms `a <=> Null` into `IsNull(a)` and `Not(a <=> Null)` into `IsNotNull(a)`; we can do the same.

### Willingness to contribute

The Delta Lake Community encourages new feature contributions. Would you or another member of your organization be willing to contribute an implementation of this feature?

- [ ] Yes. I can contribute this feature independently.
- [ ] Yes. I would be willing to contribute this feature with guidance from the Delta Lake community.
- [x] No. I cannot contribute this feature at this time.