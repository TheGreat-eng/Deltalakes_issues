## Bug
Generated Column not being generated when merging data into a table.

### Describe the problem
Given a table A with generated column G, and dataframe B without column G. When trying to merge B into A the column G is not generated for B and raises `ValueError: field id: This field is not nullable, but got None`

#### Steps to reproduce
```python
ffrom delta.tables import DeltaTable

spark = ...

query_create_table = """
CREATE TABLE default.testing_generated_columns (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 0 INCREMENT BY 1),
  data STRING
)
USING delta
"""
spark.sql(query_create_table)

# Define dummy data
data = [{"data": "Hello world"}]
df_updates = spark.createDataFrame(data, schema_flat)

target = DeltaTable.forName(spark, "default.testing_generated_columns")

(
    target.alias("target")
    .merge(
        df_updates.alias("updates"),
        "target.data = updates.data"
    )
    .whenMatchedUpdate(
        set={
            "data": "updates.data"
        }
    )
    .whenNotMatchedInsertAll()
    .execute()
)

```

#### Observed results

Merging operation raises the following error `ValueError: field id: This field is not nullable, but got None`.

#### Expected results

The merge operation inserts the new row with a monotonically incrementing value for the `id` column.

#### Further details

### Environment information

* Delta Lake version: 1.2.1
* Spark version: 3.2.1
* Scala version: 2.12

### Willingness to contribute

The Delta Lake Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the Delta Lake code base?

- [ ] Yes. I can contribute a fix for this bug independently.
- [x] Yes. I would be willing to contribute a fix for this bug with guidance from the Delta Lake community.
- [ ] No. I cannot contribute a bug fix at this time.
