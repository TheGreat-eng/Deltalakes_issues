### Describe the problem

Using dynamo-db mechanism along with the suggested [ttl](https://docs.delta.io/latest/delta-storage.html#production-configuration-s3-multi-cluster:~:text=Run%20the%20following%20command%20on%20your%20given%20DynamoDB%20table%20to%20enable%20TTL) **which has no suspension**, might lead to the following scenario:
1. 2 writers are performing `dataset.write()` around the same time
2. both writers hold the same `OptimisticTransaction.Snapshot.version` in hand- `N.json` *
3. writer A finishes writing parquet files 
4. writer A commits version `N + 1.json` to s3 and ddb
5. ttl mechanism deletes record `N + 1.json` from ddb
6. writer B finishes writing parquet files 
7. writer B checks if `N + 1.json` exists in ddb and it doesn't. 
(The mechanism doesn't verify if the log file exists in s3, only in ddb! )
9. writer B commits version `N + 1.json` to s3 and overwrites writer A's commit.

*`OptimisticTransaction.Snapshot.version` is determined prior to writing the parquet files, which might take long due to sparks laziness. 
see code in `core/src/main/scala/org/apache/spark/sql/delta/commands/WriteIntoDelta.scala`: 

<img width="962" alt="image" src="https://user-images.githubusercontent.com/38858393/193801113-7abb9e7a-d38d-4ff3-8e7f-879b517a93b3.png">The next check if log-file can be committed, will only be against ddb and not against s3.

#### Observed results

See this scenario:
1. `14:06` - `4242.json` was written for the first time- Red arrow
2. `14:16` - `4243.json` was written- Green arrow
3. `15:29` - `4242.json` was rewritten an 1.5 hours later by a job which started around the same time (1) has started- Orange arrow

![image](https://user-images.githubusercontent.com/38858393/193802902-80ad777d-6fcc-4a05-8dea-56783a2cd45a.png)


### Environment information

* Delta Lake version: 2.0.0
* Spark version: Apache-Spark/3.2.1-amzn-0
* Scala version: 2.12

The Delta Lake Community encourages bug fix contributions. Would you or another member of your organization be willing to contribute a fix for this bug to the Delta Lake code base?

- [ ] Yes. I can contribute a fix for this bug independently.
- [x] Yes. I would be willing to contribute a fix for this bug with guidance from the Delta Lake community.
- [ ] No. I cannot contribute a bug fix at this time.

