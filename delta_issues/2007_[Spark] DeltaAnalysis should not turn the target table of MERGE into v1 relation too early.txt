<!--
Thanks for sending a pull request!  Here are some tips for you:
  1. If this is your first time, please read our contributor guidelines: https://github.com/delta-io/delta/blob/master/CONTRIBUTING.md
  2. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP] Your PR title ...'.
  3. Be sure to keep the PR description updated to reflect all changes.
  4. Please write your PR title to summarize what this PR proposes.
  5. If possible, provide a concise example to reproduce the issue for a faster review.
  6. If applicable, include the corresponding issue number in the PR title and link it in the body.
-->

## Description

<!--
- Describe what this PR changes.
- Describe why we need the change.
 
If this PR resolves an issue be sure to include "Resolves #XXX" to correctly link and close the issue upon merge.
-->

In the Spark analyzer, it skips resolving the MERGE command if the target table is v2 and reports `ACCEPT_ANY_SCHEMA`. However, the `DeltaAnalysis` will turn Delta v2 relation to v1, and make Spark mistakenly resolve the MERGE commands targeting Delta tables, which can lead to issues as Delta supports more features like schema evolution.

We can't simply move the "turn Delta v2 relation to v1" code to the post-resolution phase, as we still need to do it to resolve metadata columns, which heavily rely on v1 relation. This PR does a surgical fix: if we find a MERGE command that can't be turned into its Delta variant yet (because the source query is not resolved), we mark its target table and do not turn it into v2 relation. After the MERGE command is fully resolved, we will turn it to the Delta variable, and all Delta relations inside it will become v1 relations
## How was this patch tested?

<!--
If tests were added, say they were added here. Please make sure to test the changes thoroughly including negative and positive cases if possible.
If the changes were tested in any way other than unit tests, please clarify how you tested step by step (ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future).
If the changes were not tested, please explain why.
-->
new test
## Does this PR introduce _any_ user-facing changes?

<!--
If yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.
If possible, please also clarify if this is a user-facing change compared to the released Delta Lake versions or within the unreleased branches such as master.
If no, write 'No'.
-->
no